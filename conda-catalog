 
CONDA
Anaconda

- Help on a command:
$ conda <command> --help

- List enviroments:
$ conda env list

- Activate/deactivate enviroment (conda>=4.6):
$ conda activate <enviroment>
$ conda deactivate <enviroment>

- Create enviroment:
$ conda create --name <env-name>
$ conda create -n <env-name> python=<version>

- Create enviroment with specific package:
$ conda create -n <env-name> <package>
$ conda create -n <env-name> <package>=<pack-version>

- Exporting environment.yml
$ conda activate <env>
$ conda env export > environment.yml

- Creating an environment from a environment.yml:
$ conda env create -f environment.yml





- Open jupyter:
(<env>)$ jupyter notebook
(<env>)$ jupyter notebook <file.ipynb>
(<env>)$ jupyper lab
(<env>)$ jupyper lab <file.ipynb>






	(basically, never use pip)
	(conda on Virtual Enviroment)
	(pacman on the system)

	WARNING: NEVER run 'pip install <module>' on the TERMINAL. You should never make any changes to '/usr', except through pacman. If you need to install with pip do it in a Virtual Enviroment (like conda).

	(if a package isn't available by conda, try conda-forge before even thinking on pip)
	(https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-pkgs.html#installing-non-conda-packages)


- Install packages on current env:
(<env>)$ conda install <package>
(<env>)$ conda install <package>=<version>

- Install packages on other env:
$ conda install <package> -n <env>

- Search package:
$ conda search <package>

- List installed package:
$ conda list
$ conda list <package>


- Check available updates:
$ conda update

- Update a package:
$ conda update <package>
$ conda update python
$ conda update conda
$ conda update anaconda

- Remove a packages:
(<env>)$ conda install <package>
$ conda install <package> -n <env>







- Finding anaconda's install directory:
$ which conda

- Finding the anaconda's python interpreter (environmental):
(<env>)$ which python

